---
import { Image } from 'astro:assets';
import { getCollection, render } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import Header from '../../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

const rawPosts = (await getCollection('blog'))
	.filter(({ id }) => /^\d+-avventura$/.test(id))
	.sort((a, b) => parseInt(a.id) - parseInt(b.id));
const base = import.meta.env.BASE_URL.replace(/\/?$/, '/');

const posts = await Promise.all(
    rawPosts.map(async (entry) => {
        const { headings } = await render(entry);
        const sections = headings
            .filter((h) => h.depth === 2 || h.depth === 3)
            .map(({ depth, slug, text }) => ({ depth, slug, text }));
        return { entry, sections };
    })
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
        <style>
            main { width: 100%; display: flex; justify-content: center; }
            section { width: 100%; max-width: 960px; margin: 0 auto; background: #fff; border:1px solid rgba(0,0,0,.06); border-radius: 12px; box-shadow: var(--box-shadow); padding: 1.25rem; }
            .toc { list-style: none; margin: 0; padding: 0; }
            .toc > li { margin: 1rem 0; }
            .toc-post { display:inline-flex; align-items:baseline; gap:.5rem; text-decoration:none; color: rgb(var(--black)); }
            .toc-post .title { font-weight: 700; color: var(--accent); }
            .sections { list-style: none; margin: .5rem 0 0 1.25rem; padding: 0; border-left: 2px solid rgba(0,0,0,.06); }
            .sections li { margin: .25rem 0; padding-left:.75rem; }
            .sections a { text-decoration: none; color: inherit; }
            .sections a:hover, .toc-post:hover { color: var(--accent); }
		</style>
	</head>
	<body>
		<Header />
		<main class="container">
			<section>
				<ol class="toc">
					{posts.map(({ entry, sections }) => (
                    <li>
                        <a class="toc-post" href={`${base}blog/${entry.id}/`}>
                            <span class="title">{entry.data.title}</span>
                        </a>
							{sections.length > 0 && (
								<ul class="sections">
									{sections.map(({ depth, slug, text }) => (
										<li>
                                            <a href={`${base}blog/${entry.id}/#${slug}`}>{text}</a>
										</li>
									))}
								</ul>
							)}
						</li>
					))}
				</ol>
			</section>
		</main>
		<Footer />
	</body>
</html>
